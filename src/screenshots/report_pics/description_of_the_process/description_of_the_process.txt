    The digital signals in the dataset have 360 segments in 1 sec and is measured in miili Volts (mV). The signal is plotted between milli Volts (mV) and segments for visualization using Matplotlib. The WFDB tool provides functionality to import the signal. The stating point and ending points of the segments can be mentioned to confine the signal. The tool also provides functionality to detect R-peaks in the signals. For each R-peak, the signal is plotted from peak-200 to peak+200 segment to get the full ECG waveform. To get R-T segment, the signal is plotted between each peak and peak+200 segment. The plots are stored as Matplotlib figures. They have to be converted to Numpy ndarrays to get an image that can be processed. The Numpy ndarray saves the image in 3 dimentions (height, weight, channels). The shape of R-T image is (288, 432, 3). The image is now cropped to get get rid of plottting axis. The shape of the cropped image is (215, 335, 3). OpenCV is used for reshaping the image. The image is reshaped to (43, 43, 3) to reduce the resolution by 5 times.

    The CNN is designed to take a numpy ndarray of size (43, 43, 3). Combination of 2 convolutional layer, 1 max pool layer and dropout layer is used 3 times. Relu activation function is used in the convolution layers. Kernel size of 3x3 is chosen for all convolutional layers, hense after each convolution layer the height and width decreases by 2. Th max pool decreases the height and with by 2. The network is then flattened and connected to a series dense layer. Finally the the output layer consists of 3 neurons with softmax activation function. The network consists of 16 layers in total. Adam optimizer with learning rate of 0.001 is used. The network is trained for 60 epocs to get a training accuracy of 0.97.
